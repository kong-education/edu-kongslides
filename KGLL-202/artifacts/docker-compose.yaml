volumes:
  kong_data:
    driver: local
networks:
  kong-edu-net:
    name: kong-edu-net
    driver: bridge
    external: true
services:
  postgres:
    image: postgres:15
    networks:
      - kong-edu-net
    container_name: postgres
    hostname: postgres
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "kong"]
      interval: 12s
      timeout: 6s
      retries: 3
    restart: on-failure
    stdin_open: true
    tty: true
    volumes:
      - kong_data:/var/lib/postgresql/data
    logging:
      driver: "syslog"
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-kong}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-kong}
      POSTGRES_USER: ${POSTGRES_USER:-kong}
  kong-migrations-bootstrap:
    image: kong/kong-gateway:${KONG_GW_VERSION:-3.4}
    networks:
      - kong-edu-net
    container_name: kong-migrations-bootstrap
    depends_on:
      postgres:
        condition: service_healthy
    command: kong migrations bootstrap --vv
    restart: on-failure
    logging:
      driver: "syslog"
    environment:
      KONG_DATABASE: ${KONG_DATABASE:-postgres}
      KONG_ENFORCE_RBAC: "on"
      KONG_PG_HOST: ${KONG_PG_HOST:-postgres}
      KONG_PG_DATABASE: ${KONG_PG_DATABASE:-kong}
      KONG_PG_USER: ${KONG_PG_USER:-kong}
      KONG_PG_PASSWORD: ${KONG_PG_PASSWORD:-kong}
      KONG_PASSWORD: ${KONG_PASSWORD:-kong}
      KONG_LOG_LEVEL: "warn"
    links:
      - postgres:postgres
  kong-migrations-up:
    image: kong/kong-gateway:${KONG_GW_VERSION:-3.4}
    networks:
      - kong-edu-net
    container_name: kong-migrations-up
    depends_on:
      kong-migrations-bootstrap:
        condition: service_completed_successfully
    command: kong migrations up --vv
    restart: on-failure
    logging:
      driver: "syslog"
    environment:
      KONG_DATABASE: ${KONG_DATABASE:-postgres}
      KONG_ENFORCE_RBAC: "on"
      KONG_PG_HOST: ${KONG_PG_HOST:-postgres}
      KONG_PG_DATABASE: ${KONG_PG_DATABASE:-kong}
      KONG_PG_USER: ${KONG_PG_USER:-kong}
      KONG_PG_PASSWORD: ${KONG_PG_PASSWORD:-kong}
      KONG_PASSWORD: ${KONG_PASSWORD:-kong}
      KONG_LOG_LEVEL: "warn"
    links:
      - postgres:postgres
  kong-migrations-finish:
    image: kong/kong-gateway:${KONG_GW_VERSION:-3.4}
    networks:
      - kong-edu-net
    container_name: kong-migrations-finish
    depends_on:
      kong-migrations-up:
        condition: service_completed_successfully
    command: kong migrations finish --vv
    restart: on-failure
    logging:
      driver: "syslog"
    environment:
      KONG_DATABASE: ${KONG_DATABASE:-postgres}
      KONG_ENFORCE_RBAC: "on"
      KONG_PG_HOST: ${KONG_PG_HOST:-postgres}
      KONG_PG_DATABASE: ${KONG_PG_DATABASE:-kong}
      KONG_PG_USER: ${KONG_PG_USER:-kong}
      KONG_PG_PASSWORD: ${KONG_PG_PASSWORD:-kong}
      KONG_PASSWORD: ${KONG_PASSWORD:-kong}
      KONG_LOG_LEVEL: "warn"
    links:
      - postgres:postgres
  kong-cp:
    image: kong/kong-gateway:${KONG_GW_VERSION:-3.4}
    networks:
      - kong-edu-net
    container_name: kong-cp
    hostname: kong-cp
    user: ${KONG_USER:-kong}
    depends_on:
      kong-migrations-finish:
        condition: service_completed_successfully
    volumes:
      - /etc/kong/conf/strigo_kong_nginx.template:/usr/local/share/lua/5.1/kong/templates/nginx_kong_gui_include.lua
      - /etc/kong/ssl:/etc/kong/ssl
      - /var/log/kong:/var/log/kong
      - /etc/kong/license.json:/etc/kong/license.json
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 12s
      timeout: 6s
      retries: 3
    restart: on-failure
    logging:
      driver: "syslog"
    command:
      - /bin/sh
      - -c
      - |
        [ ! -f /etc/kong/ssl/cluster.crt ] && [ ! -f /etc/kong/ssl/cluster.key ] && kong hybrid gen_cert /etc/kong/ssl/cluster.crt /etc/kong/ssl/cluster.key
        kong start --vv
    ports:
      - "8444-8447:8444-8447/tcp"
      - "8001-8004:8001-8004/tcp"
      - "8005-8006:8005-8006/tcp"
      - "8100:8100/tcp"
    environment:
      KONG_ROLE: control_plane
      KONG_CLUSTER_CERT: /etc/kong/ssl/cluster.crt
      KONG_CLUSTER_CERT_KEY: /etc/kong/ssl/cluster.key
      KONG_CLUSTER_DATA_PLANE_PURGE_DELAY: 600
      KONG_ADMIN_GUI_FLAGS: '{"IMMUNITY_ENABLED":true}'
      KONG_ADMIN_LISTEN: "0.0.0.0:8001, 0.0.0.0:8444 http2 ssl"
      KONG_ADMIN_GUI_LISTEN: "0.0.0.0:8002, 0.0.0.0:8445 http2 ssl"
      KONG_PORTAL_GUI_LISTEN: "0.0.0.0:8003, 0.0.0.0:8446 http2 ssl"
      KONG_PORTAL_API_LISTEN: "0.0.0.0:8004, 0.0.0.0:8447 http2 ssl"
      KONG_STATUS_LISTEN: "0.0.0.0:8100 ssl"
      KONG_CLUSTER_LISTEN: "0.0.0.0:8005"
      KONG_CLUSTER_TELEMETRY_LISTEN: "0.0.0.0:8006"
      KONG_DATABASE: ${KONG_DATABASE:-postgres}
      KONG_PG_HOST: ${KONG_PG_HOST:-postgres}
      KONG_PG_DATABASE: ${KONG_PG_DATABASE:-kong}
      KONG_PG_USER: ${KONG_PG_USER:-kong}
      KONG_PG_PASSWORD: ${KONG_PG_PASSWORD:-kong}
      KONG_PG_MAX_CONCURRENT_QUERIES: 5
      KONG_ADMIN_ACCESS_LOG: /var/log/kong/admin_access.log
      KONG_ADMIN_ERROR_LOG: /var/log/kong/admin_error.log
      KONG_ADMIN_GUI_ACCESS_LOG: /var/log/kong/admingui_access.log
      KONG_ADMIN_GUI_ERROR_LOG: /var/log/kong/admingui_error.log
      KONG_PORTAL_API_ACCESS_LOG: /var/log/kong/portalapi_access.log
      KONG_PORTAL_API_ERROR_LOG: /var/log/kong/portalapi_error.log
      KONG_PORTAL_GUI_ACCESS_LOG: /var/log/kong/portalgui_access.log
      KONG_PORTAL_GUI_ERROR_LOG: /var/log/kong/portalgui_error.log
      KONG_STATUS_ACCESS_LOG: /var/log/kong/status_access.log
      KONG_STATUS_ERROR_LOG: /var/log/kong/status_error.log
      KONG_AUDIT_LOG: "off"
      KONG_STATUS_SSL_CERT_KEY: "/etc/kong/ssl/server.key"
      KONG_STATUS_SSL_CERT: "/etc/kong/ssl/server.crt"
      KONG_ANONYMOUS_REPORTS: "off"
      KONG_ENFORCE_RBAC: "off"
      KONG_ADMIN_SSL_CERT_KEY: "/etc/kong/ssl/server.key"
      KONG_ADMIN_SSL_CERT: "/etc/kong/ssl/server.crt"
      KONG_ADMIN_GUI_URL: ${KONG_ADMIN_GUI_URL-https://$FQDN:8445}
      KONG_ADMIN_API_URI: ${KONG_ADMIN_API_URI:-https://$FQDN:8444}
      KONG_ADMIN_GUI_API_URL: ${KONG_ADMIN_GUI_API_URL:-https://$FQDN:8444}
      KONG_ADMIN_GUI_SSL_CERT_KEY: "/etc/kong/ssl/server.key"
      KONG_ADMIN_GUI_SSL_CERT: "/etc/kong/ssl/server.crt"
      KONG_PORTAL: "on"
      KONG_PORTAL_GUI_PROTOCOL: "https"
      KONG_PORTAL_GUI_HOST: ${KONG_PORTAL_GUI_HOST:-$FQDN:8446}
      KONG_PORTAL_GUI_SSL_CERT_KEY: "/etc/kong/ssl/server.key"
      KONG_PORTAL_GUI_SSL_CERT: "/etc/kong/ssl/server.crt"
      KONG_PORTAL_API_URL: ${KONG_PORTAL_API_URI:-https://$FQDN:8447}
      KONG_PORTAL_API_SSL_CERT_KEY: "/etc/kong/ssl/server.key"
      KONG_PORTAL_API_SSL_CERT: "/etc/kong/ssl/server.crt"
      KONG_PORTAL_AUTH: "basic-auth"
      KONG_PORTAL_SESSION_CONF: '{"cookie_name":"portal-session", "secret":"this_is_portal", "storage": "kong", "cookie_secure":true, "cookie_domain": ".strigo.io", "cookie_samesite":"off"}'
      KONG_PORTAL_EMAIL_VERIFICATION: "off"
      KONG_PORTAL_EMAILS_FROM: "kongtest@gmail.com"
      KONG_PORTAL_EMAILS_REPLY_TO: "kongtest@gmail.com"
      KONG_ADMIN_EMAILS_FROM: "kongtest@gmail.com"
      KONG_ADMIN_EMAILS_REPLY_TO: "kongtest@gmail.com"
      KONG_SMTP_MOCK: "on"
      KONG_NGINX_WORKER_PROCESSES: 1
      KONG_LUA_SSL_TRUSTED_CERTIFICATE: "/etc/kong/ssl/cluster.crt,system"
      KONG_PORTAL_CORS_ORIGINs: "*"
      KONG_LOG_LEVEL: "info"
  kong-dp:
    image: kong/kong-gateway:${KONG_GW_VERSION:-3.4}
    networks:
      - kong-edu-net
    container_name: kong-dp
    hostname: kong-dp
    depends_on:
      - kong-cp
    volumes:
      - /etc/kong/ssl:/etc/kong/ssl
      - /var/log/kong:/var/log/kong
      - /etc/kong/license.json:/etc/kong/license.json
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 12s
      timeout: 6s
      retries: 3
    restart: on-failure
    logging:
      driver: "syslog"
    command: kong start --vv
    ports:
      - "8443:8443/tcp"
      - "8000:8000/tcp"
      - "8101:8101/tcp"
    environment:
      KONG_PLUGINS: bundled
      KONG_HEADERS: server_tokens, latency_tokens, X-Kong-Upstream-Status
      KONG_ROLE: "data_plane"
      KONG_CLUSTER_CERT: "/etc/kong/ssl/cluster.crt"
      KONG_CLUSTER_CERT_KEY: "/etc/kong/ssl/cluster.key"
      KONG_LUA_SSL_TRUSTED_CERTIFICATE: "/etc/kong/ssl/cluster.crt,system"
      KONG_CLUSTER_CONTROL_PLANE: "kong-cp:8005"
      KONG_CLUSTER_TELEMETRY_ENDPOINT: "kong-cp:8006"
      KONG_PROXY_LISTEN: "0.0.0.0:8000, 0.0.0.0:8443 http2 ssl"
      KONG_STREAM_LISTEN: "0.0.0.0:5555, 0.0.0.0:5556 ssl reuseport backlog=65536"
      KONG_STATUS_LISTEN: "0.0.0.0:8101 ssl"
      KONG_PROXY_URI: ${KONG_PROXY_URI:-https://$FQDN:8443}
      KONG_PROXY_ACCESS_LOG: /var/log/kong/proxy_access.log
      KONG_PROXY_ERROR_LOG: /var/log/kong/proxy_error.log
      KONG_PROXY_STREAM_ACCESS_LOG: /var/log/kong/proxystream_access.log basic
      KONG_PROXY_STREAM_ERROR_LOG: /var/log/kong/proxystream_error.log
      KONG_DATABASE: "off"
      KONG_ANONYMOUS_REPORTS: "on"
      KONG_SSL_CERT_KEY: "/etc/kong/ssl/server.key"
      KONG_SSL_CERT: "/etc/kong/ssl/server.crt"
      KONG_NGINX_WORKER_PROCESSES: 1
      KONG_LOG_LEVEL: "info"
      KONG_ALLOW_DEBUG_HEADER: "on"
